


--CREATE A DATABASE
CREATE DATABASE IF NOT EXISTS financial_org;

--CREATE A SCHEMA
CREATE SCHEMA IF NOT EXISTS pii_data;

--CREATE A TABLE TO STORE PII_DATA
CREATE OR REPLACE TABLE customer_data(
    customer_id INT AUTOINCREMENT,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    snn VARCHAR(11),
    account_number VARCHAR(19),
    balance DECIMAL(10,2)
);
--INSERT DATA INTO THE CUSTOMER_DATA
INSERT INTO customer_data (first_name, last_name, snn, account_number, balance)
VALUES
('wahid','shaikh','123-456-789','1234567890123456789',12000.50),
('wais','shaikh','123-456-789','1234567890123456789',12000.50),
('sahik','shaikh','123-456-789','1234567890123456789',12000.50),
('valim','shaikh','123-456-789','1234567890123456789',12000.50),
('akram','shaikh','123-456-789','1234567890123456789',12000.50);

SELECT TOP 5 *   FROM customer_data;

--CREATE MASKING POLICIES FOR SOCIAL SECURITY NUMBER AND ACCOUNT NUMBER
CREATE OR REPLACE MASKING POLICY  ssn_masking AS (val STRING) RETURNS STRING ->
CASE WHEN CURRENT_ROLE() IN ('FULL_ACCESS_ROLE') THEN val 
ELSE CONCAT ('XXX-XX-', SUBSTR(val, 8,4)) END;

CREATE OR REPLACE MASKING POLICY account_number AS (val STRING) RETURNS STRING ->
CASE WHEN CURRENT_ROLE() IN ('FULL_ACCESS_ROLE') THEN val 
ELSE CONCAT('XXXXXXXXXXX', SUBSTR(val, 14, 6)) END;

--APPLY THE MASING POLICIES TO THE REVELENT COLUMNS
ALTER TABLE customer_data MODIFY COLUMN snn SET MASKING POLICY ssn_masking;
ALTER TABLE customer_data MODIFY COLUMN account_number SET MASKING POLICY account_number;

--VERIFY THE DATA IS MASKED
SELECT * FROM customer_data;

--CREATE TABLE 
CREATE TABLE IF NOT EXISTS customer_info (
customer_id INT AUTOINCREMENT,
full_name  VARCHAR(100),
email VARCHAR(100),
phone_number VARCHAR(15),
credit_card_number VARCHAR(16)
);

--INSERTING DATA INTO THE CUSTOMER_INFO TABLE
INSERT INTO customer_info (full_name, emial, phone_number, credit_card_number)
VALUES
('wahid','wahid@gnmail.com','123-456-7890','123456789012345678'),
('wais','wais@gnmail.com','123-456-7890','123456789012345678'),
('sahil','sahil@gnmail.com','123-456-7890','123456789012345678'),
('vasim','vasim@gnmail.com','123-456-7890','123456789012345678');

--CREATE MASKING POLICY FOR FULL REDACTION
CREATE MASLING POLICY IF NOT EXISTS redact_full AS (val STRING) RETURNS STRING ->
'REDACTED';


--APPLY REDACTION TO THE EMAIL COLUMN
ALTER TABLE customer_info MODIFY COLUMN email SET MASKING POLICY redact_full;

SELECT * FROM customer_info;

--CREATE MASKING POLICY FOR OBFUSCATING EMAIL
CREATE MASKING POLICY IF NOT EXISTS email_obfuscation AS (val STRING) RETURNS STRING ->
REGEXP_REPLACE(val, '[A-Za-z0-9]','*');

--APPLY THE OBFUCATION POLICY TO THE EMAIL COLUMN 
ALTER TABLE customer_info MODIFY COLUMN email SET MASKING POLICY email_obfuscation;

ALTER TABLE customer_info MODIFY COLUMN  email UNSET MASKING POLICY;

--CREATE MASKING POLICY FOR FULL MASKING 
CREATE MASKING POLICY IF NOT EXISTS full_mask AS (val STRING) RETURNS STRING ->
'************';

--APPLY FULLMASK PPOLICY
ALTER TABLE customer_info MODIFY COLUMN phone_number SET MASKING POLICY full_mask;

--CREATE A MASKING POLICY FOR PARTIAL MASKING 
CREATE MASKING POLICY IF NOT EXISTS partial_mask AS (val STRING) RETURNS STRING ->
CONCAT(SUBSTR(val,1,4), '*******', SUBSTR(val, LENGTH(val)-3,4));

ALTER TABLE customer_info MODIFY COLUMN credit_card_number SET MASKING POLICY partial_mask;

--CREATE MASKING POLICY THAT ONLY MASK DATA FOR NON-ADMIN ROLES 
CREATE MASKING POLICY IF NOT EXISTS conditional_mask AS (val STRING) RETURNS STRING ->
CASE WHEN CURRENT_ROLE() IN ('admin') THEN val ELSE '***_***_***_***'END;

ALTER TABLE customer_info MODIFY COLUMN credit_card_number UNSET MASKING POLICY;

--APPLY conditional_mask POLICY FOR credit_card_number
ALTER TABLE customer_info MODIFY COLUMN credit_card_number SET MASKING POLICY conditional_mask;





